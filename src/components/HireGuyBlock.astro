---
import Button from "./Button.astro";
import HubspotModal from "/src/components/HubspotModal.astro";
import Modal from "./Modal.astro";

import qrImg from '/src/img/qr.png';

---

<section class="main-content">
  <article class="full-width-contrast promo-home promo-phone">
    <div class="content-container">
      <div class="content-title">
        <h2>
          Hire your AI employees as easily as <br />
          <span class="highlight-title">saying &lsquo;hello...&rsquo;</span>
        </h2>
        <p>Start as naturally as hiring a person. One quick interview is all it takes.</p>

        <div class="actions">
            <Button
            target=""
            variant="secondary"
            size="medium"
            data-open-modal="mailing-list-modal"
            label="">Schedule your interview</Button>
        </div>
      </div>
    </div>
  </article>

  <!-- Static modal (PNG QR + tel fallback) -->
  <HubspotModal />
</section>

<style>
/* Scoped visibility swap (match base selector weight) */
.promo-phone .button.secondary.medium[data-mobile-call]{display:inline-flex}
.promo-phone .button.secondary.medium[data-open-modal="call-modal"]{display:none}

/* When desktop-like, swap visibility */
html.desktoplike .promo-phone .button.secondary.medium[data-mobile-call]{display:none}
html.desktoplike .promo-phone .button.secondary.medium[data-open-modal="call-modal"]{display:inline-flex}
</style>

<script is:inline>
  // Tiny, idempotent desktop detection; safe across multiple instances
  (function(){
    if (document.documentElement.classList.contains('desktoplike')) return;
    var mq = matchMedia('(hover: hover) and (pointer: fine)');
    function set(){
      var uaMobile = navigator.userAgentData?.mobile === true;
      var hasTouch = (navigator.maxTouchPoints || 0) > 0;
      var desktoplike = mq.matches && !uaMobile && !hasTouch;
      document.documentElement.classList.toggle('desktoplike', desktoplike);
    }
    set();
    mq.addEventListener?.('change', set);
  })();
</script>
