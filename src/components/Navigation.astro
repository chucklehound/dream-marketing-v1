---
interface Props {
  onClose?: () => void;
}

const { onClose } = Astro.props;

import '../components/navigation.scss';
import HamburgerIcon from '/src/img/nav.svg?raw';

import Logo from '../components/Logo.astro';

import Button from '../components/Button.astro';

import angledArrowDR from '/src/img/angled-arrow-down-right.svg';
---

<div class="navigation">
  <nav>
    <!-- Hamburger button for small screens -->
    <button class="hamburger" aria-label="Toggle navigation">
      <Fragment set:html={HamburgerIcon} />
      <span class="visually-hidden">Toggle navigation</span>
    </button>
    <a class="logo-nav" href="/"><Logo /><span class="visually-hidden">Return home</span></a>
    <ul class="navbar">
        <li class="dropdown">
          <a class="dropdown-toggle">What We Do</a>
          <div class="dropdown-menu">
            <div class="dropdown-inner"><h4><a href="/what-we-do/">What we do<img src={angledArrowDR.src} alt="" role="presentation"></a></h4>
              <ul>
                <li><h5>By Industry</h5></li>
                <li><a href="/what-we-do/by-industry/travel">For Travel</a></li>
                <!-- <li><a href="/what-we-do/by-industry/hospitality">Hospitality</a></li> -->
                <li><a href="/what-we-do/by-industry/f-and-b">For Food & Beverage</a></li>
              </ul>
              <ul>
                <li><h5>By Use Case</h5></li>
                <li><a href="/what-we-do/by-use-case/deep-market-research">Deep Market Research</a></li>
                <li><a href="/what-we-do/by-use-case/growing-sales-pipeline">Growing Sales Pipeline</a></li>
                <li><a href="/what-we-do/by-use-case/reengaging-existing-customers">Re-engaging Existing Customers</a></li>
                <li><a href="/what-we-do/by-use-case/testing-new-markets">Testing New Markets</a></li>
              </ul>
            </div>
          </div>
        </li>
        <li class="dropdown">
          <a class="dropdown-toggle">How We Do It</a>
          <div class="dropdown-menu">
            <div class="dropdown-inner"><h4><a href="/how-we-do-it/">How we do it<img src={angledArrowDR.src} alt="" role="presentation"></a></h4>
              <ul>
                <li><a href="/how-we-do-it/research-engine">Research Engine</a></li>
                <li><a href="/how-we-do-it/list-building">List Building</a></li>
                <li><a href="/how-we-do-it/prospecting">Prospecting</a></li>
                <li><a href="/how-we-do-it/outreach">Outreach</a></li>
              </ul>
            </div>
          </div>
        </li>
        <!-- <li>
          <a href="/rev-ops/">For Rev-Ops</a>
      </li> -->
        <!-- <li class="dropdown">
            <a class="dropdown-toggle">For RevOps</a>
            <div class="dropdown-menu">
              <div class="dropdown-inner"><h4><a href="/rev-ops/">For Rev-Ops<img src={angledArrowDR.src} alt="" role="presentation"></a></h4>
                <ul>
                  <li><a href="/how-we-do-it/f-and-b">All Documentation</a></li>
                  <li><a href="/how-we-do-it/research-engine">Popular Documentation</a></li>
                  <li><a href="/how-we-do-it/list-building">New market testing</a></li>
                  <li><a href="/how-we-do-it/healthcare">Building Research Points</a></li>
                  <li><a href="/how-we-do-it/fmcg">Setting up Account Management Team</a></li>
                </ul>
              </div>
            </div>
        </li> -->
        <li><a href="/customers">Customers</a></li>
        <li class="dropdown">
          <a class="dropdown-toggle">Resources</a>
          <div class="dropdown-menu">
            <div class="dropdown-inner"><h4><a href="/resources/">Resources<img src={angledArrowDR.src} alt="" role="presentation"></a></h4>
              <ul>
                <li><a href="/resources/about-us">About Us</a></li>
                <li><a href="/resources/customer-stories">Customer Stories</a></li>
                <li><a href="https://prong-cold-847.notion.site/Dream-Open-Roles-a11b6cb094da4d2d806df30ea585e174">Careers</a></li>
                <!-- <li><a href="/resources/savings-calculator">Savings Calculator</a></li> -->
              </ul>
            </div>
          </div>
        </li>
        <li>
          <div class="mobile-login-button">
            <Button href="https://app.usedream.ai" target="_blank" variant="secondary" label="">Log in</Button>
          </div>
        </li>
    </ul>
    <!-- Always visible login button -->
    <div class="desktop-login"><Button href="https://app.usedream.ai" target="_blank" variant="secondary" label="">Log in</Button></div>
    <div class="mobile-demo-button">
      <Button href="/book-meeting" target="_blank" variant="primary" label="">Book a demo</Button>
    </div>
  </nav>

</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const hamburger = document.querySelector('.hamburger');
  const navLinks = document.querySelector('.navbar');
  const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
  const navigation = document.querySelector('.navigation');
  const body = document.body; // Select the body element

  // Hamburger menu toggle
  hamburger.addEventListener('click', () => {
    navLinks.classList.toggle('open');
    hamburger.classList.toggle('navOpen');
  });

  // Function to check if any dropdown is open
  function updateNavigationClass() {
    const anyDropdownOpen = Array.from(dropdownToggles).some(toggle => toggle.classList.contains('active'));
    if (anyDropdownOpen) {
      navigation.classList.add('dropdown-open');
      body.classList.add('dropdown-open'); // Add class to body
    } else {
      navigation.classList.remove('dropdown-open');
      body.classList.remove('dropdown-open'); // Remove class from body
    }
  }

  // Function to close all dropdowns
  function closeAllDropdowns(excludeToggle = null) {
    dropdownToggles.forEach((dropdownToggle) => {
      if (dropdownToggle !== excludeToggle) { // Exclude the currently clicked toggle
        const dropdownMenu = dropdownToggle.nextElementSibling;
        dropdownMenu.classList.remove('show');
        dropdownToggle.classList.remove('active');
      }
    });
  }

  // Apply click behavior for dropdowns
  dropdownToggles.forEach((dropdownToggle) => {
    const dropdownMenu = dropdownToggle.nextElementSibling;

    // Toggle dropdown on click
    dropdownToggle.addEventListener('click', (e) => {
      e.preventDefault();

      // If the clicked dropdown is already open, close it
      if (dropdownToggle.classList.contains('active')) {
        dropdownMenu.classList.remove('show');
        dropdownToggle.classList.remove('active');
      } else {
        // Close all other dropdowns, then open the clicked one
        closeAllDropdowns(dropdownToggle);
        dropdownMenu.classList.add('show');
        dropdownToggle.classList.add('active');
      }

      updateNavigationClass();  // Update the class when the dropdown is toggled
    });
  });

  // Close all dropdowns when clicking outside
  document.addEventListener('click', (e) => {
    const targetElement = e.target as Element;
    const anyDropdownMenuOpen = Array.from(dropdownToggles).some((toggle) => {
      const dropdownMenu = toggle.nextElementSibling;
      return dropdownMenu.contains(targetElement) || toggle.contains(targetElement);
    });

    if (!anyDropdownMenuOpen) {
      closeAllDropdowns();  // Close all dropdowns if clicked outside
      updateNavigationClass();  // Update the class when all dropdowns are closed
    }
  });
});



</script>

